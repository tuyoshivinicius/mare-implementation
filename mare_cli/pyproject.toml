[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mare-cli"
version = "1.0.0"
description = "Multi-Agent Collaboration Framework for Requirements Engineering CLI"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Manus AI", email = "contact@manus.ai"}
]
maintainers = [
    {name = "Manus AI", email = "contact@manus.ai"}
]
keywords = ["requirements engineering", "multi-agent", "langchain", "langgraph", "cli", "ai"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Requirements Engineering",
]
requires-python = ">=3.8"
dependencies = [
    "langchain>=0.1.0",
    "langchain-openai>=0.1.0",
    "langgraph>=0.0.40",
    "langchain-community>=0.0.20",
    "click>=8.0.0",
    "rich>=13.0.0",
    "typer>=0.9.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "sqlalchemy>=2.0.0",
    "pyyaml>=6.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
]

[project.scripts]
mare = "mare.cli.main:main"

[project.urls]
Homepage = "https://github.com/manus-ai/mare-cli"
Documentation = "https://mare-cli.readthedocs.io/"
Repository = "https://github.com/manus-ai/mare-cli"
"Bug Tracker" = "https://github.com/manus-ai/mare-cli/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["mare*"]

[tool.setuptools.package-data]
mare = ["config/templates/*.yaml", "config/templates/*.json"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

